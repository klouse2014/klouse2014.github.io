{"pages":[{"text":"发现很多shell命令看完之后不用渐渐就忘了, 因此把常用的命令总结一下后面有遇到的再更新。 常用命令 find find [path] [options] [tests] [actions] path为绝对路径或相对路径 option选项 -maxdepths N 最多搜索N层目录 tests提供多种测试, 按顺序应用到搜索上, false跳过, true对当前文件采取actions -name pattern 文件名模式匹配 -newer file1 ! file2 比指定file1新, file2旧的文件 -type d/f 为目录/文件 -mtime +n/-n 按照文件更改时间来查找文件, -n表示更改时间距现在n天以内, +n表示更改时间在n天以前 -mmin n 最后n分钟更改的文件 -empty 文件为空 -a/-and 两个测试必须为真, -o/-or 其中一个为真, !/-not 取反 可通过括号增加测试优先级, 前面需加\\ actions为执行语句 -exec -ok 必须以\\;结尾。ok会在执行前询问,使用{}传入后会被当前文件的完整路径取代 -print 打印文件名 grep grep [options] PATTERN [files] 用于在文件中搜索字符串 options选项 -c 输出匹配行的数目，而不是输出匹配的行 -E 启动拓展表达式 -i 忽略大小写 -l 只列出包含匹配行的文件名，而不输出真正的匹配行 -v 对匹配模式取反，即搜索不匹配行而不是匹配行 -n 打印包含匹配项的行和行标 test test expression or [ expression ] 字符串 =/!= 是否相等 -n/-z 是否为空 算术比较 -eq -ne -gt -ge -lt -le ! 文件 -e 存在 -f 存在并且是文件 -d 存在并且是目录 –w/v/x 可读/写/执行 cut -f 按字段 -c 按字符 -b 按字节 -d 设置分割符 N-M, N设置输出范围 mkdir -p 或 —parents 表示若所要创建的目录的上层目录没有创建，则会一并创建上层目录 comm 比较两个已排序的文件。在缺省情况下将三栏输出写到标准输出。这些栏由以下内容组成：只在 File1 中的行、只在 File2 中的行、既在 File1，又在 File2 中的行 comm [-123] [File1] [File2] -1 不显示只在第1个文件里出现过的列 -2 不显示只在第2个文件里出现过的列 -3 不显示只在第1和第2个文件里出现过的列 expr 或 $((…)) 将它的参数作为一个表达式来求值 x = `expr $x + 1` `…` 或 $(…) 执行中间的语句, 结果就是命令的输出，而不是该命令的退出状态。将它的字符串形式的输出结果 ${…} 为保护变量名中类似$i部分的扩展，需将其放入花括号中 ${param:-default} 当param为空时将它设置为default ${#param} 给出param的长度 ${param%word} 从param尾部开始删除与word匹配的最小部分，返回剩余部分 ${param%%word} 从param尾部开始删除与word匹配的最长部分，返回剩余部分 ${param#word} 从param头部开始删除与word匹配的最小部分，返回剩余部分 ${param##word} 从param头部开始删除与word匹配的最长部分，返回剩余部分","tags":"Linux","loc":"http://klouse2014.github.io/shell+command","title":"shell命令备忘"},{"text":"开始吧 github准备 创建username.github.io 数据仓库 pelican准备 新建blog文件件, 执行pelican-quickstart命令创建基本框架 将output文件夹绑定到数据仓库 cd output git init git remote add origin https://github.com/username/username.github.io.git git pull origin master pelican 包含很多主题和插件，可以直接clone使用 pelican-themes pelican-plugins 本例使用 elegant 主题 elegant主题说明文档 生成网页文件以及在本机上测试 make html make serve 注意事项 增加评论功能 Pelican 使用Disqus评论, 可以申请在Disqus上申请一个站点, 然后在pelicanconf.py里添加或修改DISQUS_SITENAME项: DISQUS_SITENAME = u\"xxxxx\" 参考资料 pelican官方说明文档 配置文件参考","tags":"Pelican","loc":"http://klouse2014.github.io/GitHub+Pelican","title":"使用GitHub＋Pelican搭建个人博客"}]}